<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!-- PEARL: The pack-as-tool functionality of dotnet arbitrarily requires tools to be cross-platform tools,
			and they enforce this by disallowing the 'windows' target-framework-moniker (TFM) when packing.
			So, we have no option but to refrain from using this TFM when packing. -->
		<TargetFramework Condition="'$(_IsPacking)'=='True'">net9.0</TargetFramework>
		<TargetFramework Condition="'$(_IsPacking)'!='True'">net9.0</TargetFramework>
		<!-- PEARL-ON-PEARL: Of course, omitting the -windows TFM causes several instances of warning CA1416 "This call
			site is reachable on all platforms" to be issued. So, we have no option but to suppress this warning, and
			let users know that this tool will only work on windows. -->
		<NoWarn Condition="'$(_IsPacking)'=='True'">$(NoWarn);CA1416</NoWarn>

		<Configurations>Debug;Release</Configurations>
		<OutputType>Exe</OutputType>

		<!-- Packing properties -->
		<PackAsTool>True</PackAsTool>
		<!--<ToolCommandName>SvgConvert</ToolCommandName>-->
		<!--<PackageOutputPath>./nupkg</PackageOutputPath>-->
			
		<!--PackageId: the default is $(MSBuildProjectName)--> 
		<!--<PackageId>$(AssemblyName)</PackageId>-->
		<!--Title: the default appears to be $(MSBuildProjectName) if equal to $(AssemblyName), blank otherwise.--> 
		<Title>$(MSBuildProjectName) ($(Configuration))</Title>
		<Authors>MikeNakis</Authors>
		<Description>Converts SVG files to other formats. (PNG or ICO.)</Description>
		<Copyright>Copyright Â© Mike Nakis. All rights reserved.</Copyright>
		<PackageIcon>MikeNakis.SvgConvert-Logo.png</PackageIcon>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<RepositoryUrl>https://github.com/mikenakis/MikeNakis.SvgConvert.git</RepositoryUrl>
		<PublishRepositoryUrl>True</PublishRepositoryUrl>
		<PackageTags>dotnet; dotnet-core; utilities; command-line; tools; command-line-tools; svg; png; ico</PackageTags>
		<PackageLicenseFile>LICENSE.md</PackageLicenseFile>
 		<PackageProjectUrl>https://github.com/mikenakis/MikeNakis.SvgConvert</PackageProjectUrl>
		<PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
		<PackageReleaseNotes>initial release</PackageReleaseNotes>
		<IncludeSymbols Condition="'$(Configuration)' == 'Release'">True</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		
	</PropertyGroup>

	<Import Project="..\AllProjects.proj.xml" />
	<Import Project="..\BannedApiAnalyzers.proj.xml" />

	<ItemGroup>
		<PackageReference Include="Svg" Version="3.4.7" />
	</ItemGroup>

	<!-- PEARL: Dotnet does not support swapping between package and project dependencies. The following nonsense is
	            necessary to work around this limitation. See https://github.com/dotnet/project-system/issues/195 -->
	<Choose>
		<When Condition="Exists('..\..\MikeNakis.Kit\MikeNakis.Kit\MikeNakis.Kit.csproj')">
			<ItemGroup>
				<ProjectReference Include="..\..\MikeNakis.Kit\MikeNakis.Kit\MikeNakis.Kit.csproj" />
			</ItemGroup>
		</When>
		<Otherwise>
			<ItemGroup>
				<PackageReference Include="MikeNakis.Kit-$(PackagesConfiguration)" Version="2.*" PrivateAssests="All" />
			</ItemGroup>
		</Otherwise>
	</Choose>

	<ItemGroup>
		<Using Static="True" Include="MikeNakis.Kit.GlobalStatics" />
	</ItemGroup>

	<!-- PEARL: Dotnet does not support swapping between package and project dependencies. The following nonsense is
	            necessary to work around this limitation. See https://github.com/dotnet/project-system/issues/195 -->
	<Choose>
		<When Condition="Exists('..\..\MikeNakis.Console\MikeNakis.Console\MikeNakis.Console.csproj')">
			<ItemGroup>
				<ProjectReference Include="..\..\MikeNakis.Console\MikeNakis.Console\MikeNakis.Console.csproj" />
			</ItemGroup>
		</When>
		<Otherwise>
			<ItemGroup>
				<PackageReference Include="MikeNakis.Console-$(PackagesConfiguration)" Version="2.*" PrivateAssests="All" />
			</ItemGroup>
		</Otherwise>
	</Choose>

	<!-- PEARL: Dotnet does not support swapping between package and project dependencies. The following nonsense is
	            necessary to work around this limitation. See https://github.com/dotnet/project-system/issues/195 -->
	<Choose>
		<When Condition="Exists('..\..\MikeNakis.Clio\MikeNakis.Clio\MikeNakis.Clio.csproj')">
			<ItemGroup>
				<ProjectReference Include="..\..\MikeNakis.Clio\MikeNakis.Clio\MikeNakis.Clio.csproj" />
			</ItemGroup>
		</When>
		<Otherwise>
			<ItemGroup>
				<PackageReference Include="MikeNakis.Clio-$(PackagesConfiguration)" Version="2.*" PrivateAssests="All" />
			</ItemGroup>
		</Otherwise>
	</Choose>

	<!-- NuGet Packaging ******************************************************************************************* -->

	<!-- PEARL: this target is executed after pack, even though we say BeforeTargets="Pack" -->
	<Target Name="CheckVersion" BeforeTargets="Pack">
		<Message Importance="High" Text="PackageVersion = '$(PackageVersion)', Version = '$(Version)'" />
		<Error Condition="'$(PackageVersion)' == '1.0.0'" Text="Version is 1.0.0"/>
	</Target>

	<ItemGroup>
		<None Include="..\LICENSE.md" Pack="True" PackagePath="/" />
		<None Include="..\MikeNakis.SvgConvert-Logo.png" Pack="True" PackagePath="/" />
		<None Include="SvgConvert.ico.svg" Pack="True" PackagePath="/" />
		<None Include="README-for-nuget.md" Pack="True" PackagePath="/README.md" />
	</ItemGroup>

</Project>
